{"ast":null,"code":"import axios from 'axios';\nimport { USER_DELETE_FAIL, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_RESET, USER_DETAILS_SUCCESS, USER_LIST_FAIL, USER_LIST_REQUEST, USER_LIST_RESET, USER_LIST_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_FAIL, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_REQUEST } from '../constants/userConstants';\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/login', {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  localStorage.removeItem('cartItems');\n  localStorage.removeItem('shippingAddress');\n  localStorage.removeItem('paymentMethod');\n  dispatch({\n    type: USER_LOGOUT\n  });\n  dispatch({\n    type: USER_DETAILS_RESET\n  });\n  dispatch({\n    type: ORDER_LIST_MY_RESET\n  });\n  dispatch({\n    type: USER_LIST_RESET\n  });\n  document.location.href = '/login';\n};\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users', {\n      name,\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getUserDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users/${id}`, config);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: message\n    });\n  }\n};\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/users/profile`, user, config);\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users`, config);\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload: message\n    });\n  }\n};\nexport const deleteUser = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DELETE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    await axios.delete(`/api/users/${id}`, config);\n    dispatch({\n      type: USER_DELETE_SUCCESS\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const updateUser = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/users/${user._id}`, user, config);\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS\n    });\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_DETAILS_RESET\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["/home/liamtyrie/Desktop/clothes-store/frontend/src/actions/userActions.js"],"names":["axios","USER_DELETE_FAIL","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_RESET","USER_DETAILS_SUCCESS","USER_LIST_FAIL","USER_LIST_REQUEST","USER_LIST_RESET","USER_LIST_SUCCESS","USER_LOGIN_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGOUT","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_REQUEST","login","email","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","message","logout","removeItem","ORDER_LIST_MY_RESET","document","location","href","register","name","getUserDetails","id","getState","userLogin","userInfo","Authorization","token","get","updateUserProfile","user","put","listUsers","deleteUser","delete","updateUser","_id"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,gBADF,EAEEC,mBAFF,EAGEC,mBAHF,EAIEC,iBAJF,EAKEC,oBALF,EAMEC,kBANF,EAOEC,oBAPF,EAQEC,cARF,EASEC,iBATF,EAUEC,eAVF,EAWEC,iBAXF,EAYEC,eAZF,EAaEC,kBAbF,EAcEC,kBAdF,EAeEC,WAfF,EAgBEC,kBAhBF,EAiBEC,qBAjBF,EAkBEC,qBAlBF,EAmBEC,gBAnBF,EAoBEC,wBApBF,EAqBEC,2BArBF,EAsBEC,2BAtBF,EAuBEC,mBAvBF,QAwBO,4BAxBP;AA0BA,OAAO,MAAMC,KAAK,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB,MAAOC,QAAP,IAAoB;AAC5D,MAAI;AACFA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEf;AADC,KAAD,CAAR;AAIA,UAAMgB,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADI,KAAf;AAMA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAM/B,KAAK,CAACgC,IAAN,CACrB,kBADqB,EAErB;AAAEP,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAFqB,EAGrBG,MAHqB,CAAvB;AAMAF,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEd,kBADC;AAEPmB,MAAAA,OAAO,EAAEF;AAFF,KAAD,CAAR;AAKAG,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAAjC;AACD,GAvBD,CAuBE,OAAOO,KAAP,EAAc;AACdX,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEhB,eADC;AAEPqB,MAAAA,OAAO,EACLK,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OADxB,GAEIF,KAAK,CAACE;AALL,KAAD,CAAR;AAOD;AACF,CAjCM;AAmCP,OAAO,MAAMC,MAAM,GAAG,MAAOd,QAAD,IAAc;AACxCO,EAAAA,YAAY,CAACQ,UAAb,CAAwB,UAAxB;AACAR,EAAAA,YAAY,CAACQ,UAAb,CAAwB,WAAxB;AACAR,EAAAA,YAAY,CAACQ,UAAb,CAAwB,iBAAxB;AACAR,EAAAA,YAAY,CAACQ,UAAb,CAAwB,eAAxB;AACAf,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEb;AAAR,GAAD,CAAR;AACAY,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEtB;AAAR,GAAD,CAAR;AACAqB,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEe;AAAR,GAAD,CAAR;AACAhB,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAElB;AAAR,GAAD,CAAR;AACAkC,EAAAA,QAAQ,CAACC,QAAT,CAAkBC,IAAlB,GAAyB,QAAzB;AACD,CAVM;AAYP,OAAO,MAAMC,QAAQ,GAAG,CAACC,IAAD,EAAOvB,KAAP,EAAcC,QAAd,KAA2B,MAAOC,QAAP,IAAoB;AACrE,MAAI;AACFA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEX;AADC,KAAD,CAAR;AAIA,UAAMY,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADI,KAAf;AAMA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAM/B,KAAK,CAACgC,IAAN,CACrB,YADqB,EAErB;AAAEgB,MAAAA,IAAF;AAAQvB,MAAAA,KAAR;AAAeC,MAAAA;AAAf,KAFqB,EAGrBG,MAHqB,CAAvB;AAMAF,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEV,qBADC;AAEPe,MAAAA,OAAO,EAAEF;AAFF,KAAD,CAAR;AAKAG,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAAjC;AACD,GAvBD,CAuBE,OAAOO,KAAP,EAAc;AACdX,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEZ,kBADC;AAEPiB,MAAAA,OAAO,EACLK,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OADxB,GAEIF,KAAK,CAACE;AALL,KAAD,CAAR;AAOD;AACF,CAjCM;AAmCP,OAAO,MAAMS,cAAc,GAAIC,EAAD,IAAQ,OAAOvB,QAAP,EAAiBwB,QAAjB,KAA8B;AAClE,MAAI;AACFxB,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEvB;AADC,KAAD,CAAR;AAIA,UAAM;AACJ+C,MAAAA,SAAS,EAAE;AAAEC,QAAAA;AAAF;AADP,QAEFF,QAAQ,EAFZ;AAIA,UAAMtB,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACPwB,QAAAA,aAAa,EAAG,UAASD,QAAQ,CAACE,KAAM;AADjC;AADI,KAAf;AAMA,UAAM;AAAExB,MAAAA;AAAF,QAAW,MAAM/B,KAAK,CAACwD,GAAN,CAAW,cAAaN,EAAG,EAA3B,EAA8BrB,MAA9B,CAAvB;AAEAF,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAErB,oBADC;AAEP0B,MAAAA,OAAO,EAAEF;AAFF,KAAD,CAAR;AAID,GArBD,CAqBE,OAAOO,KAAP,EAAc;AACd,UAAME,OAAO,GACXF,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OADxB,GAEIF,KAAK,CAACE,OAHZ;;AAKA,QAAIA,OAAO,KAAK,8BAAhB,EAAgD;AAC9Cb,MAAAA,QAAQ,CAACc,MAAM,EAAP,CAAR;AACD;;AACDd,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAExB,iBADC;AAEP6B,MAAAA,OAAO,EAAEO;AAFF,KAAD,CAAR;AAID;AACF,CApCM;AAsCP,OAAO,MAAMiB,iBAAiB,GAAIC,IAAD,IAAU,OAAO/B,QAAP,EAAiBwB,QAAjB,KAA8B;AACvE,MAAI;AACFxB,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEP;AADC,KAAD,CAAR;AAIA,UAAM;AACJ+B,MAAAA,SAAS,EAAE;AAAEC,QAAAA;AAAF;AADP,QAEFF,QAAQ,EAFZ;AAIA,UAAMtB,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPwB,QAAAA,aAAa,EAAG,UAASD,QAAQ,CAACE,KAAM;AAFjC;AADI,KAAf;AAOA,UAAM;AAAExB,MAAAA;AAAF,QAAW,MAAM/B,KAAK,CAAC2D,GAAN,CAAW,oBAAX,EAAgCD,IAAhC,EAAsC7B,MAAtC,CAAvB;AAEAF,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEN,2BADC;AAEPW,MAAAA,OAAO,EAAEF;AAFF,KAAD,CAAR;AAIAJ,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEd,kBADC;AAEPmB,MAAAA,OAAO,EAAEF;AAFF,KAAD,CAAR;AAIAG,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAAjC;AACD,GA3BD,CA2BE,OAAOO,KAAP,EAAc;AACd,UAAME,OAAO,GACXF,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OADxB,GAEIF,KAAK,CAACE,OAHZ;;AAKA,QAAIA,OAAO,KAAK,8BAAhB,EAAgD;AAC9Cb,MAAAA,QAAQ,CAACc,MAAM,EAAP,CAAR;AACD;;AACDd,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAER,wBADC;AAEPa,MAAAA,OAAO,EAAEO;AAFF,KAAD,CAAR;AAID;AACF,CA1CM;AA2CP,OAAO,MAAMoB,SAAS,GAAG,MAAM,OAAOjC,QAAP,EAAiBwB,QAAjB,KAA8B;AAC3D,MAAI;AACFxB,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEnB;AADC,KAAD,CAAR;AAIA,UAAM;AACJ2C,MAAAA,SAAS,EAAE;AAAEC,QAAAA;AAAF;AADP,QAEFF,QAAQ,EAFZ;AAIA,UAAMtB,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACPwB,QAAAA,aAAa,EAAG,UAASD,QAAQ,CAACE,KAAM;AADjC;AADI,KAAf;AAMA,UAAM;AAAExB,MAAAA;AAAF,QAAW,MAAM/B,KAAK,CAACwD,GAAN,CAAW,YAAX,EAAwB3B,MAAxB,CAAvB;AAEAF,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEjB,iBADC;AAEPsB,MAAAA,OAAO,EAAEF;AAFF,KAAD,CAAR;AAID,GArBD,CAqBE,OAAOO,KAAP,EAAc;AACd,UAAME,OAAO,GACXF,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OADxB,GAEIF,KAAK,CAACE,OAHZ;;AAIA,QAAIA,OAAO,KAAK,8BAAhB,EAAgD;AAC9Cb,MAAAA,QAAQ,CAACc,MAAM,EAAP,CAAR;AACD;;AACDd,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEpB,cADC;AAEPyB,MAAAA,OAAO,EAAEO;AAFF,KAAD,CAAR;AAID;AACF,CAnCM;AAqCP,OAAO,MAAMqB,UAAU,GAAIX,EAAD,IAAQ,OAAOvB,QAAP,EAAiBwB,QAAjB,KAA8B;AAC9D,MAAI;AACFxB,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAE1B;AADC,KAAD,CAAR;AAIA,UAAM;AACJkD,MAAAA,SAAS,EAAE;AAAEC,QAAAA;AAAF;AADP,QAEFF,QAAQ,EAFZ;AAGA,UAAMtB,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACPwB,QAAAA,aAAa,EAAG,UAASD,QAAQ,CAACE,KAAM;AADjC;AADI,KAAf;AAMA,UAAMvD,KAAK,CAAC8D,MAAN,CAAc,cAAaZ,EAAG,EAA9B,EAAiCrB,MAAjC,CAAN;AAEAF,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEzB;AAAR,KAAD,CAAR;AACD,GAjBD,CAiBE,OAAOmC,KAAP,EAAc;AACd,UAAME,OAAO,GACXF,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OADxB,GAEIF,KAAK,CAACE,OAHZ;;AAKA,QAAIA,OAAO,KAAK,8BAAhB,EAAgD;AAC9Cb,MAAAA,QAAQ,CAACc,MAAM,EAAP,CAAR;AACD;;AACDd,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAE3B,gBADC;AAEPgC,MAAAA,OAAO,EAAEO;AAFF,KAAD,CAAR;AAID;AACF,CAhCM;AAkCP,OAAO,MAAMuB,UAAU,GAAIL,IAAD,IAAU,OAAO/B,QAAP,EAAiBwB,QAAjB,KAA8B;AAChE,MAAI;AACFxB,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEL;AADC,KAAD,CAAR;AAIA,UAAM;AACJ6B,MAAAA,SAAS,EAAE;AAAEC,QAAAA;AAAF;AADP,QAEFF,QAAQ,EAFZ;AAIA,UAAMtB,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPwB,QAAAA,aAAa,EAAG,UAASD,QAAQ,CAACE,KAAM;AAFjC;AADI,KAAf;AAOA,UAAM;AAAExB,MAAAA;AAAF,QAAW,MAAM/B,KAAK,CAAC2D,GAAN,CAAW,cAAaD,IAAI,CAACM,GAAI,EAAjC,EAAoCN,IAApC,EAA0C7B,MAA1C,CAAvB;AAEAF,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEN;AAAR,KAAD,CAAR;AAEAK,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAErB,oBAAR;AAA8B0B,MAAAA,OAAO,EAAEF;AAAvC,KAAD,CAAR;AAEAJ,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEtB;AAAR,KAAD,CAAR;AACD,GAvBD,CAuBE,OAAOgC,KAAP,EAAc;AACd,UAAME,OAAO,GACXF,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OADxB,GAEIF,KAAK,CAACE,OAHZ;;AAKA,QAAIA,OAAO,KAAK,8BAAhB,EAAgD;AAC9Cb,MAAAA,QAAQ,CAACc,MAAM,EAAP,CAAR;AACD;;AACDd,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAET,gBADC;AAEPc,MAAAA,OAAO,EAAEO;AAFF,KAAD,CAAR;AAID;AACF,CAtCM","sourcesContent":["import axios from 'axios';\nimport {\n  USER_DELETE_FAIL,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DETAILS_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_RESET,\n  USER_DETAILS_SUCCESS,\n  USER_LIST_FAIL,\n  USER_LIST_REQUEST,\n  USER_LIST_RESET,\n  USER_LIST_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_UPDATE_REQUEST\n} from '../constants/userConstants';\n\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    const { data } = await axios.post(\n      '/api/users/login',\n      { email, password },\n      config\n    );\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n    });\n  }\n};\n\nexport const logout = () => (dispatch) => {\n  localStorage.removeItem('userInfo');\n  localStorage.removeItem('cartItems');\n  localStorage.removeItem('shippingAddress');\n  localStorage.removeItem('paymentMethod');\n  dispatch({ type: USER_LOGOUT });\n  dispatch({ type: USER_DETAILS_RESET });\n  dispatch({ type: ORDER_LIST_MY_RESET });\n  dispatch({ type: USER_LIST_RESET });\n  document.location.href = '/login';\n};\n\nexport const register = (name, email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    const { data } = await axios.post(\n      '/api/users',\n      { name, email, password },\n      config\n    );\n\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n    });\n  }\n};\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n\n    const {\n      userLogin: { userInfo }\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n\n    const { data } = await axios.get(`/api/users/${id}`, config);\n\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: message\n    });\n  }\n};\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST\n    });\n\n    const {\n      userLogin: { userInfo }\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n\n    const { data } = await axios.put(`/api/users/profile`, user, config);\n\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST\n    });\n\n    const {\n      userLogin: { userInfo }\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n\n    const { data } = await axios.get(`/api/users`, config);\n\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload: message\n    });\n  }\n};\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DELETE_REQUEST\n    });\n\n    const {\n      userLogin: { userInfo }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n\n    await axios.delete(`/api/users/${id}`, config);\n\n    dispatch({ type: USER_DELETE_SUCCESS });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload: message\n    });\n  }\n};\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST\n    });\n\n    const {\n      userLogin: { userInfo }\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config);\n\n    dispatch({ type: USER_UPDATE_PROFILE_SUCCESS });\n\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\n\n    dispatch({ type: USER_DETAILS_RESET });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload: message\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}