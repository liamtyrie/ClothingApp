{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nconst SCROLL_UP = 'up';\nconst SCROLL_DOWN = 'down';\n\nconst useScrollDirection = ({\n  initialDirection,\n  thresholdPixels,\n  off\n} = {}) => {\n  _s();\n\n  const [scrollDir, setScrollDir] = useState(initialDirection);\n  useEffect(() => {\n    const threshold = thresholdPixels || 0;\n    let lastScrollY = window.pageYOffset;\n    let ticking = false;\n\n    const updateScrollDir = () => {\n      const scrollY = window.pageYOffset;\n\n      if (Math.abs(scrollY - lastScrollY) < threshold) {\n        // We haven't exceeded the threshold\n        ticking = false;\n        return;\n      }\n\n      setScrollDir(scrollY > lastScrollY ? SCROLL_DOWN : SCROLL_UP);\n      lastScrollY = scrollY > 0 ? scrollY : 0;\n      ticking = false;\n    };\n\n    const onScroll = () => {\n      if (!ticking) {\n        window.requestAnimationFrame(updateScrollDir);\n        ticking = true;\n      }\n    };\n    /**\n     * Bind the scroll handler if `off` is set to false.\n     * If `off` is set to true reset the scroll direction.\n     */\n\n\n    !off ? window.addEventListener('scroll', onScroll) : setScrollDir(initialDirection);\n    return () => window.removeEventListener('scroll', onScroll);\n  }, [initialDirection, thresholdPixels, off]);\n  return scrollDir;\n};\n\n_s(useScrollDirection, \"7w69eEy2n0k2wIpNMs3l7tZceNA=\");\n\nexport default useScrollDirection;","map":{"version":3,"sources":["/home/liamtyrie/Desktop/clothes-store/frontend/src/components/utils/scrollDirection.js"],"names":["useState","useEffect","SCROLL_UP","SCROLL_DOWN","useScrollDirection","initialDirection","thresholdPixels","off","scrollDir","setScrollDir","threshold","lastScrollY","window","pageYOffset","ticking","updateScrollDir","scrollY","Math","abs","onScroll","requestAnimationFrame","addEventListener","removeEventListener"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,MAAMC,SAAS,GAAG,IAAlB;AACA,MAAMC,WAAW,GAAG,MAApB;;AAEA,MAAMC,kBAAkB,GAAG,CAAC;AAC3BC,EAAAA,gBAD2B;AAE3BC,EAAAA,eAF2B;AAG3BC,EAAAA;AAH2B,IAIxB,EAJuB,KAIhB;AAAA;;AACV,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAACK,gBAAD,CAA1C;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMS,SAAS,GAAGJ,eAAe,IAAI,CAArC;AACA,QAAIK,WAAW,GAAGC,MAAM,CAACC,WAAzB;AACA,QAAIC,OAAO,GAAG,KAAd;;AAEA,UAAMC,eAAe,GAAG,MAAM;AAC7B,YAAMC,OAAO,GAAGJ,MAAM,CAACC,WAAvB;;AAEA,UAAII,IAAI,CAACC,GAAL,CAASF,OAAO,GAAGL,WAAnB,IAAkCD,SAAtC,EAAiD;AAChD;AACAI,QAAAA,OAAO,GAAG,KAAV;AACA;AACA;;AAEDL,MAAAA,YAAY,CAACO,OAAO,GAAGL,WAAV,GAAwBR,WAAxB,GAAsCD,SAAvC,CAAZ;AACAS,MAAAA,WAAW,GAAGK,OAAO,GAAG,CAAV,GAAcA,OAAd,GAAwB,CAAtC;AACAF,MAAAA,OAAO,GAAG,KAAV;AACA,KAZD;;AAcA,UAAMK,QAAQ,GAAG,MAAM;AACtB,UAAI,CAACL,OAAL,EAAc;AACbF,QAAAA,MAAM,CAACQ,qBAAP,CAA6BL,eAA7B;AACAD,QAAAA,OAAO,GAAG,IAAV;AACA;AACD,KALD;AAOA;AACF;AACA;AACA;;;AACE,KAACP,GAAD,GACGK,MAAM,CAACS,gBAAP,CAAwB,QAAxB,EAAkCF,QAAlC,CADH,GAEGV,YAAY,CAACJ,gBAAD,CAFf;AAIA,WAAO,MAAMO,MAAM,CAACU,mBAAP,CAA2B,QAA3B,EAAqCH,QAArC,CAAb;AACA,GAnCQ,EAmCN,CAACd,gBAAD,EAAmBC,eAAnB,EAAoCC,GAApC,CAnCM,CAAT;AAqCA,SAAOC,SAAP;AACA,CA7CD;;GAAMJ,kB;;AA+CN,eAAeA,kBAAf","sourcesContent":["import { useState, useEffect } from 'react'\n\nconst SCROLL_UP = 'up'\nconst SCROLL_DOWN = 'down'\n\nconst useScrollDirection = ({\n\tinitialDirection,\n\tthresholdPixels,\n\toff\n} = {}) => {\n\tconst [scrollDir, setScrollDir] = useState(initialDirection)\n\n\tuseEffect(() => {\n\t\tconst threshold = thresholdPixels || 0\n\t\tlet lastScrollY = window.pageYOffset\n\t\tlet ticking = false\n\n\t\tconst updateScrollDir = () => {\n\t\t\tconst scrollY = window.pageYOffset\n\n\t\t\tif (Math.abs(scrollY - lastScrollY) < threshold) {\n\t\t\t\t// We haven't exceeded the threshold\n\t\t\t\tticking = false\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tsetScrollDir(scrollY > lastScrollY ? SCROLL_DOWN : SCROLL_UP)\n\t\t\tlastScrollY = scrollY > 0 ? scrollY : 0\n\t\t\tticking = false\n\t\t}\n\n\t\tconst onScroll = () => {\n\t\t\tif (!ticking) {\n\t\t\t\twindow.requestAnimationFrame(updateScrollDir)\n\t\t\t\tticking = true\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Bind the scroll handler if `off` is set to false.\n\t\t * If `off` is set to true reset the scroll direction.\n\t\t */\n\t\t!off\n\t\t\t? window.addEventListener('scroll', onScroll)\n\t\t\t: setScrollDir(initialDirection)\n\n\t\treturn () => window.removeEventListener('scroll', onScroll)\n\t}, [initialDirection, thresholdPixels, off])\n\n\treturn scrollDir\n}\n\nexport default useScrollDirection\n"]},"metadata":{},"sourceType":"module"}